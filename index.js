const { Client, GatewayIntentBits, ActivityType, MessageFlags, EmbedBuilder, Message, ButtonBuilder, ButtonStyle, ActionRowBuilder, SlashCommandBuilder, TextChannel, ChannelType, StringSelectMenuBuilder, StringSelectMenuOptionBuilder, ModalBuilder, TextInputBuilder, TextInputStyle, PermissionsBitField, PermissionFlagsBits } = require('discord.js');
const config = require('./config.json');
const mysql = require('mysql');
const discordTranscripts = require('discord-html-transcripts');
const db = mysql.createConnection({
    host: 'sql7.freesqldatabase.com',
    user: 'sql7768364',
    password: 'UJdxUmeuxW',
    database: 'sql7768364'
});
const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMembers,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent
    ]
});
require('dotenv').config();

client.on('ready', async () => {
    client.user.setActivity({name: 'Online! üü¢', type: ActivityType.Playing});

    db.connect();

    var help = new SlashCommandBuilder()
    .setName('help')
    .setDescription('Default help command for the bot.');

    client.application.commands.set([help]);

    console.log(`${client.user.username} is online!`);
});

client.on('interactionCreate', async (interaction) => {
    if(!interaction.isCommand() && !interaction.isButton() && !interaction.isStringSelectMenu() && !interaction.isModalSubmit()) return;
    if(interaction.member.user.bot) return;

    if(interaction.isCommand()) {
        if(interaction.commandName === 'suggest') {
            let suggestion = interaction.options.getString('√∂tlet');
            let suggestionChannel = interaction.guild.channels.cache.get(config.suggestionChannelId);
    
            interaction.reply({content: 'Your suggestion was successfully received! :white_check_mark:', flags: MessageFlags.Ephemeral});
            
            let suggestionEmbed = new EmbedBuilder()
            .setTitle('√öj √∂tlet! üí°')
            .setDescription('Az √∂tletre szavazhatsz a :white_check_mark: vagy az :x: reakci√≥k megnyom√°s√°val.')
            .setColor('Yellow')
            .setThumbnail('https://media.discordapp.net/attachments/1103077030439944245/1210174317749477396/pixel-art-speech-bubble-with-light-bulb-icon-icon-for-8bit-game-on-white-background-vector.png?ex=67dd4229&is=67dbf0a9&hm=6018ea51ad90ade51d7c150fb8b33e664d38f26eef340f25102a3f0b06fe83b2&=&format=webp&quality=lossless&width=1125&height=960')
            .addFields(
                {
                    name: 'Javasl√≥:',
                    value: `${interaction.member}`
                },
                {
                    name: 'Javaslat:',
                    value: `\`${suggestion}\``
                }
            )
            .setTimestamp()
            .setFooter({
                iconURL: client.user.avatarURL(),
                text: `${client.user.username} - √ñtlet rendszer`
            });
    
            let closeButton = new ButtonBuilder()
            .setLabel('Lez√°r√°s')
            .setEmoji('üîí')
            .setStyle(ButtonStyle.Danger)
            .setCustomId('close-suggestion');
    
            let actionrow = new ActionRowBuilder()
            .addComponents(closeButton);
    
            const replyMessage = await suggestionChannel.send({embeds: [suggestionEmbed], components: [actionrow]});
            if(replyMessage instanceof Message) {
                replyMessage.react('‚úÖ');
                replyMessage.react('‚ùå');
            }
        }
        else if(interaction.commandName === 'embedsay') {
            let title = interaction.options.getString('title');
            let timestamp = interaction.options.getBoolean('timestamp');
            let color = interaction.options.getString('color');
            let description = interaction.options.getString('description');
            let image = interaction.options.getString('image');
            let thumbnail = interaction.options.getString('thumbnail');
            let footerText = interaction.options.getString('footer-text');
            let footerImage = interaction.options.getString('footer-image');
            let channel = interaction.options.getChannel('channel');

            let embed = new EmbedBuilder()
            if(title != null) {
                embed.setTitle(title);
            }
            if(timestamp == true) {
                embed.setTimestamp()
            }
            if(color != null) {
                embed.setColor(color);
            }
            if(description != null) {
                embed.setDescription(description);
            }
            if(image != null) {
                embed.setImage(image)
            }
            if(thumbnail != null) {
                embed.setThumbnail(thumbnail);
            }
            if(footerText != null) {
                if(footerImage != null) {
                    embed.setFooter({
                        text: footerText,
                        iconURL: footerImage
                    })
                }
                else {
                    embed.setFooter({
                        text: footerText,
                        iconURL: client.user.avatarURL()
                    })
                }
            }

            if(channel != null) {
                if(channel instanceof TextChannel) {
                    channel.send({embeds: [embed]});
                    interaction.reply({content: 'Your embed was successfully sent out! :white_check_mark:', flags: MessageFlags.Ephemeral});
                }
            }
            else {
                interaction.channel.send({embeds: [embed]});
                interaction.reply({content: 'Your embed was successfully sent out! :white_check_mark:', flags: MessageFlags.Ephemeral});
            }
        }
        else if(interaction.commandName === 'test') {
            if(interaction.member.user.id != '689015719584989193') return;

            // let ticketEmbed = new EmbedBuilder()
            // .setTitle('Ticket nyit√°s üí°')
            // .setDescription('Egy ticket nyit√°s√°nak folyamat√°t az al√°bbi kateg√≥ri√°k k√∂z√ºli v√°laszt√°ssal kezdheted meg!')
            // .setColor('Green')
            // .setThumbnail('https://media.discordapp.net/attachments/1103077030439944245/1222284902943424664/ticket.png?ex=67ddcf85&is=67dc7e05&hm=3e27b6253a5663f2cded31da7de58eadbcb9b5be1c74d9386bea1d575166da13&=&format=webp&quality=lossless')

            // let ticketCategorySelector = new StringSelectMenuBuilder()
            // .setCustomId('ticket-category-selector')
            // .setPlaceholder('V√°lassz kateg√≥ri√°t!')
            // .addOptions(
			// 	new StringSelectMenuOptionBuilder()
			// 		.setLabel('Discord')
			// 		.setDescription('Gondom akadt, illetve k√©rdezni/jelezni szeretn√©k valamit Discorddal kapcsolatban.')
			// 		.setValue('discord')
            //         .setEmoji('ü§ñ'),
			// 	new StringSelectMenuOptionBuilder()
			// 		.setLabel('Szerver')
			// 		.setDescription('K√©rd√©sem vagy √©szrev√©telem van a szerverrel kapcsolatban.')
			// 		.setValue('server')
            //         .setEmoji('üíª'),
			// 	new StringSelectMenuOptionBuilder()
			// 		.setLabel('Tagfelv√©tel')
			// 		.setDescription('Szeretn√©k jelentkezni a csapatba.')
			// 		.setValue('tgf')
            //         .setEmoji('üõ†Ô∏è'),
            //     new StringSelectMenuOptionBuilder()
            //         .setLabel('Felhaszn√°l√≥i fi√≥k')
            //         .setDescription('Gondom akadt a felhaszn√°l√≥i fi√≥kommal.')
            //         .setValue('account')
            //         .setEmoji('üöπ')
			// );

            // let row = new ActionRowBuilder()
            // .addComponents(ticketCategorySelector)

            // interaction.channel.send({embeds: [ticketEmbed], components: [row]});
            // interaction.reply({content: 'Message successfully sent! :white_check_mark:', flags: MessageFlags.Ephemeral});

            /*let user = interaction.options.getMember('user');
            if(user instanceof GuildMember) {
                connection.query(`SELECT * FROM users WHERE username='${user.user.username}' AND userid='${user.id}'`, function (err,results) {
                    if(err) throw err;
                    console.log(results[0])
                    if(results[0] != undefined) {
                        interaction.reply({content: `${user} has already been added to the database! :x:`, flags: MessageFlags.Ephemeral})
                    }
                    else {
                        connection.query(`INSERT INTO users (username,userid) VALUES ('${user.user.username}','${user.id}')`, function (err2) {if(err2) throw err2;});
                        interaction.reply({content: `${user} was successfully added to the database! :white_check_mark:`, flags: MessageFlags.Ephemeral});
                    }
                })
            }*/
        
            let bannedTicketEmbed = new EmbedBuilder()
            .setTitle('<:felhivas_3:1206266590354743316> Ki lett√©l tiltva a szerverr≈ël!')
            .setDescription('Az al√°bbiakban meg tudod n√©zni kitilt√°sod ok√°t, √©s amennyiben jogtalannak √©rzed, nyithatsz egy fellebbez≈ë ticketet is.')
            .setColor('Yellow');

            let banReasonButton = new ButtonBuilder()
            .setLabel('Kitilt√°s oka')
            .setCustomId('ban-reason-button')
            .setEmoji('‚ùî')
            .setStyle(ButtonStyle.Secondary);

            let unbanTicketOpenButton = new ButtonBuilder()
            .setLabel('Fellebbez√©s')
            .setCustomId('unban-ticket-button')
            .setEmoji('‚úåÔ∏è')
            .setStyle(ButtonStyle.Secondary);

            let row = new ActionRowBuilder().addComponents(banReasonButton, unbanTicketOpenButton);

            interaction.channel.send({embeds: [bannedTicketEmbed], components: [row]});

            interaction.reply({content: 'siker', flags: MessageFlags.Ephemeral});
        }
        else if(interaction.commandName === 'kitilt√°s') {
            let selectedUser = interaction.options.getMember("felhaszn√°l√≥")
            let banReason = interaction.options.getString("ok");
            if(selectedUser.roles.cache.has('1186432694406611014') || selectedUser.roles.cache.has('1186432688446509158') || selectedUser.roles.cache.has('1186432687150473307') || selectedUser.roles.cache.has('1186432685825065082') || selectedUser.roles.cache.has('1186432684692611193') || selectedUser.roles.cache.has('1186432667168800870') || selectedUser.roles.cache.has('1294416803824668783') || selectedUser.roles.cache.has('1186432665805672560') || selectedUser.roles.cache.has('1186432663796600944')) {
                let cancelEmbed = new EmbedBuilder()
                .setTitle('Nincs jogosults√°god ennek az embernek a kitilt√°s√°hoz!')
                .setColor('Red');
                interaction.reply({embeds: [cancelEmbed], flags: MessageFlags.Ephemeral});
            }
            else {
                db.query(`SELECT * FROM bans WHERE userid='${selectedUser.id}'`, function (err,results) {
                    if(err) throw err;
                    console.log(results[0])
                    if(results[0] != undefined) {
                        let cancelEmbed = new EmbedBuilder()
                        .setTitle('Ez az ember m√°r ki van tiltva!')
                        .setColor('Red');
                        
                        interaction.reply({embeds: [cancelEmbed], flags: MessageFlags.Ephemeral});
                    }
                    else {
                        db.query(`INSERT INTO bans (userid,banreason,staffid) VALUES ('${selectedUser.id}','${banReason}','${interaction.member.user.id}')`, function (err) {if(err) throw err;});
                        if(selectedUser.roles.cache.has('1207744874267283517')) {
                            let boosterRole = interaction.guild.roles.cache.get('1207744874267283517');
                            let bannedRole = interaction.guild.roles.cache.get(config.bannedUserRoleId);
                            selectedUser.roles.set([boosterRole, bannedRole]);
                            let confirmEmbed = new EmbedBuilder()
                            .setTitle(`Sikeresen kitiltottad \`${selectedUser.displayName}\` felhaszn√°l√≥t!`)
                            .setColor('Green');
                            interaction.reply({embeds: [confirmEmbed], flags: MessageFlags.Ephemeral});
                        }
                        else {
                            let bannedRole = interaction.guild.roles.cache.get(config.bannedUserRoleId);
                            selectedUser.roles.set([bannedRole]);
                            let confirmEmbed = new EmbedBuilder()
                            .setTitle(`Sikeresen kitiltottad \`${selectedUser.displayName}\` felhaszn√°l√≥t!`)
                            .setColor('Green');
                            interaction.reply({embeds: [confirmEmbed], flags: MessageFlags.Ephemeral});
                        }
                    }
                })
            }
        }
    }
    else if(interaction.isButton()) {
        if(interaction.customId == 'close-suggestion') {
            if(interaction.member.roles.cache.has('1186432663796600944') || interaction.member.roles.cache.has('1186432665805672560')) {
                
                const message = await interaction.message.fetch();

                const checkMarkReaction = message.reactions.cache.get('‚úÖ');
                const crossMarkReaction = message.reactions.cache.get('‚ùå');

                const upvoteCount = checkMarkReaction.count - 1;
                const downvoteCount = crossMarkReaction.count - 1;

                let originalEmbed = message.embeds[0];

                let resultEmbed = new EmbedBuilder()
                .setTitle('√ñtlet v√©geredm√©ny üí°')
                .setDescription('Ez a szavaz√°s v√©get √©rt.')
                .setThumbnail('https://media.discordapp.net/attachments/1103077030439944245/1210174317749477396/pixel-art-speech-bubble-with-light-bulb-icon-icon-for-8bit-game-on-white-background-vector.png?ex=67dd4229&is=67dbf0a9&hm=6018ea51ad90ade51d7c150fb8b33e664d38f26eef340f25102a3f0b06fe83b2&=&format=webp&quality=lossless&width=1125&height=960')
                .addFields(
                    originalEmbed.fields[0],
                    originalEmbed.fields[1],
                    {
                        name: 'Eredm√©ny:',
                        value: `üëç **${upvoteCount}**  üëé **${downvoteCount}**`
                    }
                )
                .setTimestamp()
                .setFooter({
                    text: `${client.user.username} - √ñtlet eredm√©nyek`,
                    iconURL: client.user.avatarURL()
                });

                if(upvoteCount > downvoteCount) {
                    resultEmbed.setColor('Green');
                }
                else if(upvoteCount < downvoteCount) {
                    resultEmbed.setColor('Red');
                }
                else {
                    resultEmbed.setColor('Yellow');
                }

                message.delete();

                interaction.channel.send({embeds: [resultEmbed]})
            }
            else {
                let permissionDeniedEmbed = new EmbedBuilder()
                .setTitle('Ehhez nincs jogosults√°god!')
                .setColor('Red');

                interaction.reply({embeds: [permissionDeniedEmbed], flags: MessageFlags.Ephemeral});
            }
        }
        else if(interaction.customId == 'open-ticket-button') {
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1221915880171241532',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                            .setTitle('Welcome to this ticket!')
                            .setColor('Green');
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed] }).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `Your ticket has been created: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'close-ticket-button') {
            if(interaction.member.roles.cache.has('1186432694406611014') || interaction.member.roles.cache.has('1186432688446509158') || interaction.member.roles.cache.has('1186432687150473307') || interaction.member.roles.cache.has('1186432685825065082') || interaction.member.roles.cache.has('1186432684692611193') || interaction.member.roles.cache.has('1186432667168800870') || interaction.member.roles.cache.has('1294416803824668783') || interaction.member.roles.cache.has('1186432665805672560') || interaction.member.roles.cache.has('1186432663796600944') || interaction.member.roles.cache.has('1352377995976904888'))  {
                let makeSureEmbed = new EmbedBuilder()
                .setTitle('Biztosan be akarod z√°rni a ticketet? Ezzel t√∂rl√∂d a csatorn√°t is!')
                .setDescription('Ha nem, akkor nyomj az **√úzenet elvet√©se** feliratra!')
                .setColor('Red');
    
                let yesButton = new ButtonBuilder()
                .setCustomId('confirm-close-ticket-button')
                .setLabel('Igen, meger≈ës√≠tem')
                .setStyle(ButtonStyle.Danger);
    
                let row = new ActionRowBuilder().addComponents(yesButton);
    
                interaction.reply({embeds: [makeSureEmbed], components: [row], flags: MessageFlags.Ephemeral});
            }
            else {
                let replyEmbed = new EmbedBuilder()
                .setTitle('Nincs jogod bez√°rni ezt a ticketet!')
                .setColor('Red');
                interaction.reply({embeds: [replyEmbed], flags: MessageFlags.Ephemeral});
            }
        }
        else if(interaction.customId == 'confirm-close-ticket-button') {
            db.query(`SELECT * FROM tickets WHERE ticketid='${interaction.channel.id}'`, async function (err, results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];

                    let transcriptEmbed = new EmbedBuilder()
                    .setTitle('‚ö†Ô∏è √öj transcript!')
                    .setDescription('A transcripteket els≈ësorban g√©pen tudod megnyitni, mivel HTML form√°tumban t√°rol√≥dnak!')
                    .setColor('Yellow')
                    .addFields({
                        name: 'Felhaszn√°l√≥:',
                        value: `\`${interaction.guild.members.cache.get(result["ticketuserid"]).user.displayName}\` AKA \`${interaction.guild.members.cache.get(result["ticketuserid"]).user.username}\``
                    })
                    .setTimestamp()
                    .setFooter({
                        text: `${client.user.username} - Ticket rendszer`,
                        iconURL: client.user.avatarURL()
                    });

                    if(result["ticketstaffuserid"] != null) {
                        transcriptEmbed.addFields({
                            name: 'Staff:',
                            value: `\`${interaction.guild.members.cache.get(result["ticketstaffuserid"]).user.displayName}\` AKA \`${interaction.guild.members.cache.get(result["ticketstaffuserid"]).user.username}\``
                        })
                    }

                    let transcriptChannel = interaction.guild.channels.cache.get(config.ticketLogChannelId);
                    const attachment = await discordTranscripts.createTranscript(interaction.channel);
                    transcriptChannel.send({files: [attachment], embeds: [transcriptEmbed]});
                    await interaction.channel.delete();
                }
            })
        }
        else if(interaction.customId == 'claim-ticket-button') {
            db.query(`SELECT * FROM tickets WHERE ticketid='${interaction.channel.id}'`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    if(result["ticketclaimed"] == 0) {
                        if(interaction.member.roles.cache.has('1186432694406611014') || interaction.member.roles.cache.has('1186432688446509158') || interaction.member.roles.cache.has('1186432687150473307') || interaction.member.roles.cache.has('1186432685825065082') || interaction.member.roles.cache.has('1186432684692611193') || interaction.member.roles.cache.has('1186432667168800870') || interaction.member.roles.cache.has('1294416803824668783') || interaction.member.roles.cache.has('1186432665805672560') || interaction.member.roles.cache.has('1186432663796600944') || interaction.member.roles.cache.has('1352377995976904888')) {
                            db.query(`UPDATE tickets SET ticketclaimed=1, ticketstaffusername='${interaction.member.user.username}', ticketstaffuserid='${interaction.member.user.id}' WHERE ticketid='${interaction.channel.id}'`, function (err) {if(err) throw err;});

                            interaction.channel.permissionOverwrites.edit(interaction.member.user.id, {
                                SendMessages: true
                            });

                            let replyEmbed = new EmbedBuilder()
                            .setTitle('Sikeresen felvetted a ticketet!')
                            .setColor('Green');
                            interaction.reply({embeds: [replyEmbed], flags: MessageFlags.Ephemeral});
    
                            let channelEmbed = new EmbedBuilder()
                            .setTitle('Ticket felv√©ve!')
                            .setDescription(`A ticketet felvette ${interaction.member.user.displayName}!`)
                            .setColor('Yellow');
                            interaction.channel.send({embeds: [channelEmbed]});
    
                            let message = interaction.channel.messages.cache.get(`${result["ticketmessageid"]}`);
    
                            let reClaimTicketButton = new ButtonBuilder()
                            .setLabel('√Åtv√©tel')
                            .setEmoji('ü´≥')
                            .setStyle(ButtonStyle.Secondary)
                            .setCustomId('claim-ticket-button');
    
                            let closeTicketButton = new ButtonBuilder()
                            .setLabel('Bez√°r√°s')
                            .setEmoji('üîí')
                            .setStyle(ButtonStyle.Danger)
                            .setCustomId('close-ticket-button');
    
                            let row = new ActionRowBuilder().addComponents(closeTicketButton, reClaimTicketButton);
    
                            message.edit({components: [row]});
                        }
                        else {
                            let replyEmbed = new EmbedBuilder()
                            .setTitle('Nincs jogod felvenni ezt a ticketet!')
                            .setColor('Red');
                            interaction.reply({embeds: [replyEmbed], flags: MessageFlags.Ephemeral});
                        }
                    }
                    else if(result["ticketclaimed"] == 1) {
                        if(interaction.member.roles.cache.has('1186432694406611014') || interaction.member.roles.cache.has('1186432688446509158') || interaction.member.roles.cache.has('1186432687150473307') || interaction.member.roles.cache.has('1186432685825065082') || interaction.member.roles.cache.has('1186432684692611193') || interaction.member.roles.cache.has('1186432667168800870') || interaction.member.roles.cache.has('1294416803824668783') || interaction.member.roles.cache.has('1186432665805672560') || interaction.member.roles.cache.has('1186432663796600944') || interaction.member.roles.cache.has('1352377995976904888')) {
                            if(interaction.member.user.id == result["ticketstaffuserid"]) {
                                let replyEmbed = new EmbedBuilder()
                                .setTitle('M√°r felvetted ezt a ticketet!')
                                .setColor('Red');
                                interaction.reply({embeds: [replyEmbed], flags: MessageFlags.Ephemeral});
                            }
                            else {
                                interaction.channel.permissionOverwrites.edit(result["ticketstaffuserid"], {
                                    SendMessages: false
                                });

                                db.query(`UPDATE tickets SET ticketstaffuserid='${interaction.member.user.id}', ticketstaffusername='${interaction.member.user.id}' WHERE ticketid='${interaction.channel.id}'`, function (err) {if(err) throw err;});

                                interaction.channel.permissionOverwrites.edit(interaction.member.user.id, {
                                    SendMessages: true
                                });

                                let replyEmbed = new EmbedBuilder()
                                .setTitle('Sikeresen √°tvetted a ticketet!')
                                .setColor('Green');
                                interaction.reply({embeds: [replyEmbed], flags: MessageFlags.Ephemeral});
        
                                let channelEmbed = new EmbedBuilder()
                                .setTitle('Ticket √°tv√©ve!')
                                .setDescription(`A ticketet √°tvette ${interaction.member.user.displayName}!`)
                                .setColor('Yellow');
                                interaction.channel.send({embeds: [channelEmbed]});
                            }
                        }
                        else {
                            if(interaction.member.user.id == result["ticketuserid"]) {
                                let replyEmbed = new EmbedBuilder()
                                .setTitle('Te nyitottad a ticketet, nincs jogod felvenni!')
                                .setColor('Red');
                                interaction.reply({embeds: [replyEmbed], flags: MessageFlags.Ephemeral});
                            }
                            else if(interaction.member.user.id == result["ticketstaffuserid"]) {
                                let replyEmbed = new EmbedBuilder()
                                .setTitle('M√°r felvetted ezt a ticketet!')
                                .setColor('Red');
                                interaction.reply({embeds: [replyEmbed], flags: MessageFlags.Ephemeral});
                            }
                            else {
                                let replyEmbed = new EmbedBuilder()
                                .setTitle('A ticket m√°r fel van v√©ve valaki m√°s √°ltal!')
                                .setColor('Red');
                                interaction.reply({embeds: [replyEmbed], flags: MessageFlags.Ephemeral});
                            }
                        }
                    }
                };
            });
        }
        else if(interaction.customId == 'unban-ticket-button') {
            let discordBanModal = new ModalBuilder()
            .setCustomId('discord-ban-modal')
            .setTitle('Adj meg indokl√°st!');

            let textInput = new TextInputBuilder()
            .setCustomId('discord-ban-paragraph')
            .setLabel('K√©rlek indokold meg fellebbez√©sed!')
            .setStyle(TextInputStyle.Paragraph)
            .setMinLength(10)
            .setMaxLength(500);

            let firstRow = new ActionRowBuilder().addComponents(textInput);

            discordBanModal.addComponents(firstRow);

            await interaction.showModal(discordBanModal);
        }
        else if(interaction.customId == 'ban-reason-button') {
            db.query(`SELECT * FROM bans WHERE userid='${interaction.member.user.id}'`, function (err ,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];

                    let banReasonEmbed = new EmbedBuilder()
                    .setTitle('‚ùî Kitilt√°s oka')
                    .setDescription('Ha jogtalannak √©rzed a kitilt√°st vagy szerinted v√©letlen volt, ind√≠ts fellebbez√©st!')
                    .addFields(
                        {
                            name: 'Staff:',
                            value: `\`${interaction.guild.members.cache.get(result["staffid"]).user.displayName}\` AKA \`${interaction.guild.members.cache.get(result["staffid"]).user.username}\``
                        },
                        {
                            name: 'Kitilt√°s oka:',
                            value: `\`${result["banreason"]}\``
                        }
                    )
                    .setColor('Red')
                    .setFooter({
                        text: `${client.user.username} - Kitilt√°s rendszer`,
                        iconURL: client.user.avatarURL()
                    })
                    .setTimestamp();

                    interaction.reply({embeds: [banReasonEmbed], flags: MessageFlags.Ephemeral});
                }
                else {
                    let cancelEmbed = new EmbedBuilder()
                    .setTitle('Te nem vagy kitiltva!')
                    .setDescription('*Ha ez szerinted egy hib√°s √ºzenet, ind√≠ts fellebbez√©st!*')
                    .setColor('Red');

                    interaction.reply({embeds: [cancelEmbed], flags: MessageFlags.Ephemeral});
                }
            })
        }
    }
    else if(interaction.isStringSelectMenu()) {
        if(interaction.customId == 'ticket-category-selector') {
            let value = interaction.values[0];
            if(value == 'discord') {
                let ticketDiscordCategorySelector = new StringSelectMenuBuilder()
                .setCustomId('ticket-discord-category-selector')
                .setPlaceholder('V√°lassz alkateg√≥ri√°t!')
                .addOptions(
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Hiteles√≠t√©si probl√©ma')
                        .setDescription('Gondom akadt Discord fi√≥kom hiteles√≠t√©s√©vel.')
                        .setValue('auth'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Rang probl√©ma')
                        .setDescription('Gondom akadt a Discord rangjaimmal')
                        .setValue('roles'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Kitilt√°s vagy felf√ºggeszt√©s')
                        .setDescription('Fellebbezni szeretn√©k kitilt√°ssal/felf√ºggeszt√©ssel kapcsolatban.')
                        .setValue('ban'),
                );
                let row = new ActionRowBuilder()
                .addComponents(ticketDiscordCategorySelector)
                interaction.reply({components: [row], flags: MessageFlags.Ephemeral});
                interaction.values[0] = 0;
            }
            else if(value == 'server') {
                let ticketServerCategorySelector = new StringSelectMenuBuilder()
                .setCustomId('ticket-server-category-selector')
                .setPlaceholder('V√°lassz alkateg√≥ri√°t!')
                .addOptions(
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Bug jelent√©se')
                        .setDescription('Egy szerverrel kapcsolatos bugot szeretn√©k jelenteni.')
                        .setValue('bug'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Szerver probl√©ma')
                        .setDescription('Probl√©m√°m akadt a szerverrel.')
                        .setValue('server'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('F√≥rum probl√©ma')
                        .setDescription('Probl√©m√°m akadt a f√≥rummal.')
                        .setValue('forum'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Szankci√≥ fellebbez√©s')
                        .setDescription('Szeretn√©k fellebbezni egy szankci√≥ ellen (kitilt√°s/n√©m√≠t√°s).')
                        .setValue('sanction'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Felhaszn√°l√≥ jelent√©se')
                        .setDescription('Szeretn√©m jelenteni az egyik felhaszn√°l√≥t szab√°lytalans√°g√©rt.')
                        .setValue('user'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Staff jelent√©se')
                        .setDescription('Szeretn√©m jelenteni az egyik staffot szab√°lytalans√°g√©rt.')
                        .setValue('staff')
                );
    
                let row = new ActionRowBuilder()
                .addComponents(ticketServerCategorySelector)
                interaction.reply({components: [row], flags: MessageFlags.Ephemeral});
                interaction.values[0] = 0;
            }
            else if(value == 'tgf') {
                let ticketTGFCategorySelector = new StringSelectMenuBuilder()
                .setCustomId('ticket-tgf-category-selector')
                .setPlaceholder('V√°lassz alkateg√≥ri√°t!')
                .addOptions(
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Builder jelentkez√©s')
                        .setDescription('Szeretn√©k buildernek jelentkezni.')
                        .setValue('builder'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Staff jelentkez√©s')
                        .setDescription('Szeretn√©k staffnak jelentkezni.')
                        .setValue('staff'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('M√©dia jelentkez√©s')
                        .setDescription('Szeretn√©k m√©di√°snak jelentkezni.')
                        .setValue('media'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Partner jelentkez√©s')
                        .setDescription('Szeretn√©k partnernek jelentkezni.')
                        .setValue('partner'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Tulajdonos jelentkez√©s')
                        .setDescription('Szeretn√©k tulajdonosnak jelentkezni.')
                        .setValue('owner')
                );
    
                let row = new ActionRowBuilder()
                .addComponents(ticketTGFCategorySelector)
                interaction.reply({components: [row], flags: MessageFlags.Ephemeral});
                interaction.values[0] = 0;
            }
            else if(value == 'account') {
                let ticketAccountCategorySelector = new StringSelectMenuBuilder()
                .setCustomId('ticket-account-category-selector')
                .setPlaceholder('V√°lassz alkateg√≥ri√°t!')
                .addOptions(
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Karakter hiba')
                        .setDescription('Hiba t√∂rt√©nt a karakteremmel.')
                        .setValue('error'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Karakter felt√∂r√©s')
                        .setDescription('Felt√∂rt√©k a karakteremet.')
                        .setValue('hack'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Bel√©p√©si probl√©ma')
                        .setDescription('Probl√©m√°m akadt a fi√≥komba val√≥ bel√©p√©ssel.')
                        .setValue('login'),
                    new StringSelectMenuOptionBuilder()
                        .setLabel('Fi√≥k ellop√°sa')
                        .setDescription('Ellopt√°k a fi√≥komat.')
                        .setValue('theft')
                );
    
                let row = new ActionRowBuilder()
                .addComponents(ticketAccountCategorySelector)
                interaction.reply({components: [row], flags: MessageFlags.Ephemeral});
                interaction.values[0] = 0;
            }

            let ticketAccountCategorySelector = new StringSelectMenuBuilder()
            .setCustomId('ticket-category-selector')
            .setPlaceholder('V√°lassz kateg√≥ri√°t!')
            .addOptions(
				new StringSelectMenuOptionBuilder()
					.setLabel('Discord')
					.setDescription('Gondom akadt, illetve k√©rdezni/jelezni szeretn√©k valamit Discorddal kapcsolatban.')
					.setValue('discord')
                    .setEmoji('ü§ñ'),
				new StringSelectMenuOptionBuilder()
					.setLabel('Szerver')
					.setDescription('K√©rd√©sem vagy √©szrev√©telem van a szerverrel kapcsolatban.')
					.setValue('server')
                    .setEmoji('üíª'),
				new StringSelectMenuOptionBuilder()
					.setLabel('Tagfelv√©tel')
					.setDescription('Szeretn√©k jelentkezni a csapatba.')
					.setValue('tgf')
                    .setEmoji('üõ†Ô∏è'),
                new StringSelectMenuOptionBuilder()
                    .setLabel('Felhaszn√°l√≥i fi√≥k')
                    .setDescription('Gondom akadt a felhaszn√°l√≥i fi√≥kommal.')
                    .setValue('account')
                    .setEmoji('üöπ')
			);

            let row = new ActionRowBuilder()
            .addComponents(ticketAccountCategorySelector)

            await interaction.message.edit({components: [row]});
        }
        else if(interaction.customId == 'ticket-discord-category-selector') {
            let value = interaction.values[0];
            if(value == 'auth') {
                let discordAuthModal = new ModalBuilder()
                .setCustomId('discord-auth-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('discord-auth-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                discordAuthModal.addComponents(firstRow);

                await interaction.showModal(discordAuthModal);
            }
            else if(value == 'roles') {
                let discordRolesModal = new ModalBuilder()
                .setCustomId('discord-roles-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('discord-roles-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                discordRolesModal.addComponents(firstRow);

                await interaction.showModal(discordRolesModal);
            }
            else if(value == 'ban') {
                let discordBanModal = new ModalBuilder()
                .setCustomId('discord-ban-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('discord-ban-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                discordBanModal.addComponents(firstRow);

                await interaction.showModal(discordBanModal);
            }
        }
        else if(interaction.customId == 'ticket-server-category-selector') {
            let value = interaction.values[0];
            if(value == 'bug') {
                let serverFBugModal = new ModalBuilder()
                .setCustomId('server-bug-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('server-bug-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                serverBugModal.addComponents(firstRow);

                await interaction.showModal(serverBugModal);
            }
            else if(value == 'server') {
                let serverServerModal = new ModalBuilder()
                .setCustomId('server-server-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('server-server-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                serverServerModal.addComponents(firstRow);

                await interaction.showModal(serverServerModal);
            }
            else if(value == 'forum') {
                let serverForumModal = new ModalBuilder()
                .setCustomId('server-forum-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('server-forum-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                serverForumModal.addComponents(firstRow);

                await interaction.showModal(serverForumModal);
            }
            else if(value == 'sanction') {
                let serverSanctionModal = new ModalBuilder()
                .setCustomId('server-sanction-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('server-sanction-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                serverSanctionModal.addComponents(firstRow);

                await interaction.showModal(serverSanctionModal);
            }
            else if(value == 'user') {
                let serverUserModal = new ModalBuilder()
                .setCustomId('server-user-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('server-user-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                serverUserModal.addComponents(firstRow);

                await interaction.showModal(serverUserModal);
            }
            else if(value == 'staff') {
                let serverStaffModal = new ModalBuilder()
                .setCustomId('server-staff-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('server-staff-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                serverStaffModal.addComponents(firstRow);

                await interaction.showModal(serverStaffModal);
            }
        }
        else if(interaction.customId == 'ticket-tgf-category-selector') {
            let value = interaction.values[0];
            if(value == 'builder') {
                let tgfBuilderModal = new ModalBuilder()
                .setCustomId('tgf-builder-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('tgf-builder-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                tgfBuilderModal.addComponents(firstRow);

                await interaction.showModal(tgfBuilderModal);
            }
            else if(value == 'staff') {
                let tgfStaffModal = new ModalBuilder()
                .setCustomId('tgf-staff-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('tgf-staff-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                tgfStaffModal.addComponents(firstRow);

                await interaction.showModal(tgfStaffModal);
            }
            else if(value == 'media') {
                let tgfMediaModal = new ModalBuilder()
                .setCustomId('tgf-media-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('tgf-media-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                tgfMediaModal.addComponents(firstRow);

                await interaction.showModal(tgfMediaModal);
            }
            else if(value == 'partner') {
                let tgfPartnerModal = new ModalBuilder()
                .setCustomId('tgf-partner-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('tgf-partner-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                tgfPartnerModal.addComponents(firstRow);

                await interaction.showModal(tgfPartnerModal);
            }
            else if(value == 'owner') {
                let tgfOwnerModal = new ModalBuilder()
                .setCustomId('tgf-owner-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('tgf-owner-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                tgfOwnerModal.addComponents(firstRow);

                await interaction.showModal(tgfOwnerModal);
            }
        }
        else if(interaction.customId == 'ticket-account-category-selector') {
            let value = interaction.values[0];
            if(value == 'error') {
                let accountErrorModal = new ModalBuilder()
                .setCustomId('account-error-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('account-error-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                accountErrorModal.addComponents(firstRow);

                await interaction.showModal(accountErrorModal);
            }
            else if(value == 'hack') {
                let accountHackModal = new ModalBuilder()
                .setCustomId('account-hack-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('account-hack-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                accountHackModal.addComponents(firstRow);

                await interaction.showModal(accountHackModal);
            }
            else if(value == 'login') {
                let accountLoginModal = new ModalBuilder()
                .setCustomId('account-login-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('account-login-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                accountLoginModal.addComponents(firstRow);

                await interaction.showModal(accountLoginModal);
            }
            else if(value == 'theft') {
                let accountTheftModal = new ModalBuilder()
                .setCustomId('account-theft-modal')
                .setTitle('Pontos√≠tsd a probl√©m√°t!');

                let textInput = new TextInputBuilder()
                .setCustomId('account-theft-paragraph')
                .setLabel('K√©rlek pontos√≠ts, mi√©rt keresel minket!')
                .setStyle(TextInputStyle.Paragraph)
                .setMinLength(10)
                .setMaxLength(500);

                let firstRow = new ActionRowBuilder().addComponents(textInput);

                accountTheftModal.addComponents(firstRow);

                await interaction.showModal(accountTheftModal);
            }
        }
    }
    else if(interaction.isModalSubmit()) {
        if(interaction.customId == 'discord-auth-modal') {
            let reason = interaction.fields.getTextInputValue('discord-auth-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222164933219975178',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Discord hiteles√≠t√©si probl√©ma`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Discord hiteles√≠t√©si probl√©ma','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'discord-roles-modal') {
            let reason = interaction.fields.getTextInputValue('discord-roles-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222164933219975178',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Discord rang probl√©ma`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');
                        
                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Discord rang probl√©ma','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'discord-ban-modal') {
            let reason = interaction.fields.getTextInputValue('discord-ban-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222164933219975178',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Discord kitilt√°s/felf√ºggeszt√©s probl√©ma`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Discord kitilt√°s/felf√ºggeszt√©s probl√©ma','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'server-bug-modal') {
            let reason = interaction.fields.getTextInputValue('server-bug-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159502359396454',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Szerver bug jelent√©se`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Szerver bug jelent√©se','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'server-server-modal') {
            let reason = interaction.fields.getTextInputValue('server-server-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159502359396454',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Szerver probl√©ma`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Szerver probl√©ma','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'server-forum-modal') {
            let reason = interaction.fields.getTextInputValue('server-forum-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159502359396454',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`F√≥rum probl√©ma`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','F√≥rum probl√©ma','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'server-sanction-modal') {
            let reason = interaction.fields.getTextInputValue('server-sanction-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159502359396454',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Szankci√≥ fellebbez√©s`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Szankci√≥ fellebbez√©s','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'server-user-modal') {
            let reason = interaction.fields.getTextInputValue('server-user-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159502359396454',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Felhaszn√°l√≥ jelent√©se`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Felhaszn√°l√≥ jelent√©se','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'server-staff-modal') {
            let reason = interaction.fields.getTextInputValue('server-staff-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159502359396454',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Staff jelent√©se`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Staff jelent√©se','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'tgf-builder-modal') {
            let reason = interaction.fields.getTextInputValue('tgf-builder-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159359656591390',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Builder jelentkez√©s`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Builder jelentkez√©s','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'tgf-staff-modal') {
            let reason = interaction.fields.getTextInputValue('tgf-staff-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159359656591390',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Staff jelentkez√©s`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Staff jelentkez√©s','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'tgf-media-modal') {
            let reason = interaction.fields.getTextInputValue('tgf-media-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159359656591390',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`M√©dia jelentkez√©s`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','M√©dia jelentkez√©s','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'tgf-partner-modal') {
            let reason = interaction.fields.getTextInputValue('tgf-partner-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159359656591390',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Partner jelentkez√©s`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Partner jelentkez√©s','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'tgf-owner-modal') {
            let reason = interaction.fields.getTextInputValue('tgf-owner-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159359656591390',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Tulajdonos jelentkez√©s`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Tulajdonos jelentkez√©s','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'account-error-modal') {
            let reason = interaction.fields.getTextInputValue('account-error-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159254593736764',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Karakter hiba`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Karakter hiba','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'account-hack-modal') {
            let reason = interaction.fields.getTextInputValue('account-hack-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159254593736764',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Karakter felt√∂r√©s`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Karakter felt√∂r√©s','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'account-login-modal') {
            let reason = interaction.fields.getTextInputValue('account-login-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159254593736764',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Bel√©p√©si probl√©ma`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Bel√©p√©si probl√©ma','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
        else if(interaction.customId == 'account-theft-modal') {
            let reason = interaction.fields.getTextInputValue('account-theft-paragraph')
            db.query(`SELECT * FROM tickets WHERE ticketuserid=${interaction.member.user.id}`, function (err,results) {
                if(err) throw err;
                if(results[0] != undefined) {
                    let result = results[0];
                    interaction.reply({content: `Neked m√°r van egy nyitott ticketed: <#${result["ticketid"]}>`, flags: MessageFlags.Ephemeral});
                }
                else {
                    interaction.guild.channels.create({
                        name: `ticket-${interaction.member.user.username.substring(0,5)}`,
                        type: ChannelType.GuildText,
                        parent: '1222159254593736764',
                        reason: 'Ticket created for user',
                        permissionOverwrites: [
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.CreatePublicThreads, PermissionFlagsBits.CreatePrivateThreads, PermissionFlagsBits.CreateEvents, PermissionFlagsBits.ManageEvents, PermissionFlagsBits.ManageMessages, PermissionFlagsBits.ManageThreads, PermissionFlagsBits.ManageRoles, PermissionFlagsBits.ManageWebhooks]
                            },
                            {
                                id: interaction.member.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432694406611014',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432688446509158',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432687150473307',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432685825065082',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432684692611193',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432667168800870',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1294416803824668783',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432665805672560',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            },
                            {
                                id: '1186432663796600944',
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory]
                            }
                        ],
                    }).then(channel => {
                        let welcomeEmbed = new EmbedBuilder()
                        .setTitle(`üí° Ticket - ${interaction.member.user.username}`)
                        .setDescription('A ticketek sor√°n az √°ltal√°nos szab√°lyok vonatkoznak a besz√©lget√©sre! Ne ossz meg semmilyen szem√©lyes adatot, csak ha biztos vagy benne, hogy sz√ºks√©ges a megold√°shoz!')
                        .addFields(
                            {
                                name: 'Kateg√≥ria:',
                                value: '`Fi√≥k ellop√°sa`'
                            },
                            {
                                name: 'Pontos ok:',
                                value: `\`${reason}\``
                            }
                        )
                        .setFooter({
                            text: `${client.user.username} - Ticket rendszer`
                        })
                        .setThumbnail('https://media.discordapp.net/attachments/699628486905692220/1351640352871813191/5728506.png?ex=67db1cac&is=67d9cb2c&hm=58e163d3745ece8f2ce3a20cdb2fa95c5eeb3c99cbd248756f9d8edf1b3c6529&=&format=webp&quality=lossless')
                        .setTimestamp()
                        .setColor('Green');

                        let closeButton = new ButtonBuilder()
                        .setCustomId('close-ticket-button')
                        .setLabel('Bez√°r√°s')
                        .setStyle(ButtonStyle.Danger)
                        .setEmoji('üîí');

                        let claimButton = new ButtonBuilder()
                        .setCustomId('claim-ticket-button')
                        .setLabel('Felv√©tel')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üôã‚Äç‚ôÇÔ∏è');

                        let row = new ActionRowBuilder().addComponents(closeButton, claimButton);
                    
                        channel.send({ content: `${interaction.member}`, embeds: [welcomeEmbed], components: [row]}).then(message => {
                            db.query(`INSERT INTO tickets (ticketid,ticketusername,ticketuserid,ticketmessageid,ticketcategory,ticketreason) VALUES ('${channel.id}','${interaction.member.user.username}','${interaction.member.user.id}','${message.id}','Fi√≥k ellop√°sa','${reason}')`, function (err) {
                                if (err) throw err;
                            });
                        
                            interaction.reply({ content: `A ticketed k√©szen √°ll: <#${channel.id}>`, flags: MessageFlags.Ephemeral });
                        });
                    }).catch(err => {
                        console.log(err);
                    });
                }
            })
        }
    }
});

client.on('guildMemberAdd', async (member) => {
    if(member.user.bot) return;

    let logChannel = member.guild.channels.cache.get(config.doorChannelId);
    if(logChannel instanceof TextChannel) {
        logChannel.send({content: `${member} has joined the server! :white_check_mark:`});
    }
});

client.on('guildMemberRemove', async (member) => {
    if(member.user.bot) return;

    let logChannel = member.guild.channels.cache.get(config.doorChannelId);
    if(logChannel instanceof TextChannel) {
        logChannel.send({content: `${member} has left the server! :x:`});
    }
});

client.on('channelDelete', async (channel) => {
    db.query(`SELECT * FROM tickets WHERE ticketid='${channel.id}'`, function (err,results) {
        if(err) throw err;
        if(results[0] != undefined) {
            db.query(`DELETE FROM tickets WHERE ticketid='${channel.id}'`, function (err) {if(err) throw err;});
        }
    })
})

client.login(process.env.TOKEN);